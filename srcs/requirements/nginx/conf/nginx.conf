user	nginx;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # So the Docker container gets the logs.
  access_log	/dev/stdout;
  error_log	/dev/stderr warn;

  # Performance optimisations
  sendfile		on;
  tcp_nopush		on;
  tcp_nodelay		on;
  keepalive_timeout	65;

  server {
    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate		/etc/nginx/ssl/certs/nginx.crt;
    ssl_certificate_key		/etc/nginx/ssl/private/nginx.key;
    ssl_protocols		TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers	off;

    server_name #SERVER_NAME_HERE#;

    root /var/www/html;
    index index.php index.html index.htm;

    add_header	X-Frame-Options		"SAMEORIGIN" always;	# Protects against clickjacking.
    add_header	X-Content-Type-Options	"nosniff" always;	# Protects against MIME-type sniffing attacks.
    add_header	X-XSS-Protection	"1; mode=block" always;	# Protects against XSS attacks.

    client_max_body_size	64M;

    # Main location, to handle WordPress permalinks
    location / {
      try_files $uri $uri/ /index.php?$args;
    }

    # PHP-FPM configuration
    location ~ \.php(/|$) {
      try_files			$uri =404;
      fastcgi_split_path_info	^(.+\.php)(/.+)$;

      fastcgi_pass		wordpress:9000;
      fastcgi_index		index.php;

      include			fastcgi_params;
      fastcgi_param		SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_param		PATH_INFO $fastcgi_path_info;
    }

    # Deny access to hidden files
    location ~ /\. {
      deny		all;
      access_log	off;
      log_not_found	off;
    }
  }
}
